{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GiftExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAAU,EAEAC,mBAAS,IAFT,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAmBnC,OACG,0BAAMC,SAbY,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAO,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OAC7BN,EAAc,OAUf,2BACAO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGkCC,UAAUH,GAH5C,+DAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAXhB,kBAeZM,GAfY,4CAAH,sDCGPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,yBAAKgB,UAAU,0CACX,4BAAKN,GACL,yBAAKO,IAAKjB,EAAKkB,IAAKR,MCHnBS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkCtC,OA5BAC,qBAAU,WAEN1B,EAAQC,GACP0B,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGf,UAGP,CAACtB,IAaGuB,ED7BuBM,CAAa7B,GAA/Ba,EAJuB,EAI5BN,KAAYe,EAJgB,EAIhBA,QAQnB,OACI,oCACA,4BAAKtB,GAELsB,EAAQ,uCAAgB,KACxB,yBAAKJ,UAAU,YAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACLD,UEQbqB,EA/Bc,WAAI,MAIO7C,mBAAS,IAJhB,mBAItB8C,EAJsB,KAIVC,EAJU,KAU7B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAahD,OAAQgD,IACrB,6BAEA,4BAEQD,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA8B,IAAK9B,EACLA,SAAUA,U,MCnBlCkC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.82eeadf1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCat})=>{ // {setCat} se puede desestructurar en vez de usar props\r\n\r\n    const [inputValue, setInputValue]= useState('');\r\n\r\n    const handleInputChange= (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>1){\r\n\r\n            setCat(cats=> [inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n        // setCategories(cats=> [...cats, inputValue])\r\n       // props.setCategories()\r\n        //console.log('submit done');\r\n    }\r\n\r\n    return(\r\n       <form onSubmit={handleSubmit}>\r\n\r\n           <input \r\n           type=\"text\"\r\n           value={inputValue}\r\n           onChange={ handleInputChange}\r\n           />\r\n\r\n           \r\n       </form>\r\n            \r\n      \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n\r\n    setCat: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n\r\n    //const url= 'https://api.giphy.com/v1/gifs/search?q=bleach&limit=10&api_key=BzwD0OpMikgHzvHCNMdh6BvfyH4TFJhq'\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BzwD0OpMikgHzvHCNMdh6BvfyH4TFJhq`\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url,\r\n\r\n        }\r\n    })\r\n    return gif;\r\n}","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <h1>{title}</h1>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(imgs => setImages(imgs))\r\n    // }, [category])\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n       {loading?<p>Cargando</p>:null}\r\n        <div className=\"cardgrid\">\r\n            \r\n                 {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        key={img.id} \r\n                        {...img} \r\n                        />\r\n                )) \r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n        .then( imgs =>{\r\n\r\n            setTimeout(() => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            },500);\r\n\r\n        }  )\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n\r\n    // setTimeout(()=>{\r\n    //     setState({\r\n    //         data: [1,2,3],\r\n    //         loading: false,\r\n    //     })\r\n    // },3000);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n export const GiftExpertApp =()=>{\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    //const [categories, setCategories] = useState(['One Punch']);\r\n    const [categories, setCategories] = useState([]);\r\n    // const handleAdd=()=>{\r\n    //     //setCategories([...categories,'Bleach']);\r\n    //     setCategories(cats=>[...categories,'Bleach']);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCat={setCategories} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category=> (\r\n                        <GifGrid\r\n                        key={category} \r\n                        category={category} \r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp'\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}